diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8d23a299a..f58c62831 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -76,7 +76,11 @@ endif()
 
 if(APPLE)
   list(APPEND OGRE_CMAKE_ARGS -DOGRE_ENABLE_PRECOMPILED_HEADERS:BOOL=OFF)
-  list(APPEND OGRE_CMAKE_ARGS -DCMAKE_OSX_ARCHITECTURES=arm64;x86_64)
+  if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm64")
+    list(APPEND OGRE_CMAKE_ARGS "-DCMAKE_OSX_ARCHITECTURES='arm64'")
+  else()
+    list(APPEND OGRE_CMAKE_ARGS "-DCMAKE_OSX_ARCHITECTURES='x86_64'")
+  endif()
 endif()
 
 ament_vendor(ogre_vendor
diff --git a/patches/0005-fix-macos-arm64.patch b/patches/0005-fix-macos-arm64.patch
new file mode 100644
index 000000000..9494cc9ae
--- /dev/null
+++ b/patches/0005-fix-macos-arm64.patch
@@ -0,0 +1,19 @@
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index f4d8fd4..ffae9c8 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -270,14 +270,6 @@ elseif(EMSCRIPTEN)
+   set(OGRE_CONFIG_THREADS "0" CACHE STRING "Threading is unstable on Emscripten" FORCE)
+ elseif (APPLE AND NOT APPLE_IOS)
+ 
+-  set(XCODE_ATTRIBUTE_SDKROOT macosx)
+-  if(CMAKE_GENERATOR STREQUAL "Unix Makefiles")
+-    execute_process(COMMAND xcodebuild -version -sdk "${XCODE_ATTRIBUTE_SDKROOT}" Path | head -n 1 OUTPUT_VARIABLE CMAKE_OSX_SYSROOT)
+-    string(REGEX REPLACE "(\r?\n)+$" "" CMAKE_OSX_SYSROOT "${CMAKE_OSX_SYSROOT}")
+-  else()
+-    set(CMAKE_OSX_SYSROOT macosx)
+-  endif()
+-
+   # Make sure that the OpenGL render system is selected for non-iOS Apple builds
+   set(OGRE_BUILD_RENDERSYSTEM_GLES2 FALSE)
+ endif ()
diff --git a/patches/0006-fix-char16.patch b/patches/0006-fix-char16.patch
new file mode 100644
index 000000000..dfc080bb9
--- /dev/null
+++ b/patches/0006-fix-char16.patch
@@ -0,0 +1,17 @@
+diff --git a/Components/Overlay/include/OgreUTFString.h b/Components/Overlay/include/OgreUTFString.h
+index 4b29f9d..bb55630 100644
+--- a/Components/Overlay/include/OgreUTFString.h
++++ b/Components/Overlay/include/OgreUTFString.h
+@@ -183,10 +183,10 @@ namespace Ogre {
+         static const size_type npos = static_cast<size_type>(~0);
+ 
+         //! a single 32-bit Unicode character
+-        typedef uint32 unicode_char;
++        typedef char32_t unicode_char;
+ 
+         //! a single UTF-16 code point
+-        typedef uint16 code_point;
++        typedef char16_t code_point;
+ 
+         //! value type typedef for use in iterators
+         typedef code_point value_type;
